----------------------------- MODULE AbsJupiter -----------------------------
(*
Abstract Jupiter
*)

EXTENDS Naturals, Order, AdditionalSequenceOperators

CONSTANTS
    Client, \* the set of client replicas
    Server, \* the unique server replica
    O,      \* the set of original operations
    co,     \* the client order in which each client generates its operations
    so,     \* the server order in which the server processes operations
    hb      \* the happened-before relation

Replica == Client \cup {Server} \* all replicas
sigma == [O |-> O, co |-> co, so |-> so, hb |-> hb] \* the schedule

ASSUME
    /\ O \subseteq [c : Client, n : Nat]    \* oid = (c, n)
    /\ co \in [Client -> Seq(O)]    \* strict total order (for each client) represented by sequence
    /\ so \in Seq(O)     \* strict total order represented by sequence
    /\ hb \in O \times O \* strict partial order

(*
The restriction of co to operations generated by c \in Client.
*)
\* R | c == {<<o1, o2>> \in R: o1.c = c /\ o2.c = c}

(*
Determine the eo order at client c
*)
RECURSIVE EOR(_)
EOR(csigma) ==
    IF csigma.co = <<>>
    THEN csigma.so
    ELSE LET o == Head(csigma.co)
          IN FALSE

(*
eo: execution order, a function mapping each replica r \in Replica to
the order in which the operations are processed at each r.
*)
eo == [r \in Replica |->
        IF r = Server
        THEN so
        ELSE EOR([sigma EXCEPT !.co = co[r]])]
=============================================================================
\* Modification History
\* Last modified Tue Sep 25 17:44:19 CST 2018 by hengxin
\* Created Mon Aug 20 20:23:41 CST 2018 by hengxin